"use strict";

var _this = void 0;
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e3) { throw _e3; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e4) { didErr = true; err = _e4; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
var titles = Array.from(document.querySelectorAll(".title")),
  swiper = new Swiper(".swiper", {
    spaceBetween: 10,
    speed: 500,
    pagination: {
      el: ".swiper-pagination",
      type: "bullets",
      clickable: !0
    },
    keyboard: {
      enabled: !0,
      onlyInViewport: !0,
      pageUpDown: !0
    },
    autoplay: {
      delay: 5e3
    },
    loop: !0
  });
var images = [];
for (var e = 0; e < document.querySelectorAll(".gallery__item").length; e++) {
  var t = new Image();
  t.onload = function () {
    _this.width, _this.height;
  }, t.src = document.querySelectorAll(".gallery__item")[e].getAttribute("style").split("").splice(10, document.querySelectorAll(".gallery__item")[e].getAttribute("style").split("").splice(10).length - 1).join(""), t.width > t.height ? t.ratio = t.width / t.height : t.ratio = t.height / t.width, t.ratio >= 1.75 && document.querySelectorAll(".gallery__item")[e].classList.add("horisontal"), images.push(t);
}
document.addEventListener("click", function (e) {
  if ("gallery__group" == e.target.className) {
    var _iterator = _createForOfIteratorHelper(document.querySelectorAll(".gallery__item")),
      _step;
    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var _e = _step.value;
        _e.classList.add("hidden");
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
    var _t,
      l = e.target.dataset.gallery__id;
    _t = 1 == l ? Array.from(document.querySelectorAll(".gallery__item")) : Array.from(document.querySelectorAll(".gallery__item")).filter(function (e) {
      return e.dataset.id == l;
    });
    var _iterator2 = _createForOfIteratorHelper(_t),
      _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var _e2 = _step2.value;
        _e2.classList.remove("hidden");
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
  }
  "BUTTON" == e.target.tagName && e.preventDefault(), e.target.dataset.navAnchor && (e.preventDefault(), document.querySelector("#" + e.target.dataset.navAnchor).scrollIntoView({
    behavior: "smooth"
  }));
});
var setSpanWrapper = function setSpanWrapper(e) {
  var t = e.textContent,
    l = '<span class="title__after">' + t.at(-1) + "<span/>",
    r = Array.from(t).slice(0, -1).join("");
  e.innerHTML = r + l;
};
window.onload = function () {
  titles.forEach(function (e) {
    setSpanWrapper(e);
  });
};